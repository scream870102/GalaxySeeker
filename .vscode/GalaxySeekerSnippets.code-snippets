{
	// Place your GalaxySeeker 工作區 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create AEnemyComponent": {
		"scope": "csharp",
		"prefix": "AEnemyComponent",
		"body": [
			"using UnityEngine;",
			"/// <summary>${1:AEnemy}</summary>",
			"namespace GalaxySeeker.Enemy.${1:AEnemy} {",
			"    [System.Serializable]",
			"    public class ${2:Component} : A${1:AEnemy}Component {",
			"        override public void OnStateEnter (Animator animator, AnimatorStateInfo stateInfo, int layerIndex) {",
			"            if (!Parent)",
			"                Parent = animator.GetComponent<${1:AEnemy}> ( );",
			"        }",
			"        override public void OnStateUpdate (Animator animator, AnimatorStateInfo stateInfo, int layerIndex) {",
			"",			
			"        }",
			"        override public void OnStateExit (Animator animator, AnimatorStateInfo stateInfo, int layerIndex) {",
			"            this.Parent.ChooseNextAction ( );",
			"        }",
			"    }",
			"}",
			""
		],
		"description": "Create AEnemyComponent"
	},
	"Create A Enemy": {
		"prefix": "AEnemy",
		"body": [
			"using UnityEngine;",
			"namespace GalaxySeeker.Enemy.${1:AEnemy}{",
			"    public class ${1:AEnemy}: AEnemy {",
			"        void Awake ( ) {",
			"            Init ( );",
			"        }",
			"        override protected void Dead ( ) {",
			"            Debug.Log (\"I am ${1:AEnemy}I come from hell\");",
			"        }",
			"",
			"    }",
			"    public class A${1:AEnemy}Component : AEnemyComponent {",
			"        public ${1:AEnemy} Parent { get { return this.parent as ${1:AEnemy}; } protected set { this.parent = value; } }",
			"    }",
			"}",
			""
		],
		"description": "Create A Enemy"
	}
}